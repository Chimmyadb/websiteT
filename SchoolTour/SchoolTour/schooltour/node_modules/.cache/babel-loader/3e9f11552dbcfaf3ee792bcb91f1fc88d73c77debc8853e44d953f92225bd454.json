{"ast":null,"code":"// import React, { useState } from 'react';\n// import Swal from 'sweetalert2';\n// import Footer from '../components/Footer';\n// import '../css/Login.css';\n\n// function Parent() {\n//   const [parents, setParents] = useState([]);\n//   const [selectedParentIndex, setSelectedParentIndex] = useState(null);\n//   const [showParentModal, setShowParentModal] = useState(false);\n//   const [showStudentModal, setShowStudentModal] = useState(false);\n//   const [parentForm, setParentForm] = useState({ name: '', phone: '', email: '' });\n//   const [studentForm, setStudentForm] = useState({ name: '', age: '', classLevel: '' });\n//   const [error, setError] = useState('');\n//   const [editStudentIndex, setEditStudentIndex] = useState(null);\n\n//   const openParentModal = (index = null) => {\n//     if (index !== null) {\n//       setParentForm(parents[index]);\n//       setSelectedParentIndex(index);\n//     } else {\n//       setParentForm({ name: '', phone: '', email: '', students: [] });\n//       setSelectedParentIndex(null);\n//     }\n//     setError('');\n//     setShowParentModal(true);\n//   };\n\n//   const openStudentModal = (parentIndex, studentIndex = null) => {\n//     setSelectedParentIndex(parentIndex);\n//     if (studentIndex !== null) {\n//       setStudentForm(parents[parentIndex].students[studentIndex]);\n//       setEditStudentIndex(studentIndex);\n//     } else {\n//       setStudentForm({ name: '', age: '', classLevel: '' });\n//       setEditStudentIndex(null);\n//     }\n//     setShowStudentModal(true);\n//   };\n\n//   const handleParentChange = (e) => {\n//     const { name, value } = e.target;\n//     setParentForm((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleStudentChange = (e) => {\n//     const { name, value } = e.target;\n//     setStudentForm((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleParentSubmit = (e) => {\n//     e.preventDefault();\n//     const { name, phone, email } = parentForm;\n//     if (!name || !phone || !email) {\n//       setError('All fields are required.');\n//       return;\n//     }\n//     if (!/^\\d{10,15}$/.test(phone)) {\n//       setError('Phone must be 10â€“15 digits.');\n//       return;\n//     }\n//     if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n//       setError('Invalid email format.');\n//       return;\n//     }\n\n//     if (selectedParentIndex !== null) {\n//       const updated = [...parents];\n//       updated[selectedParentIndex] = { ...parentForm };\n//       setParents(updated);\n//       Swal.fire('Updated!', 'Parent info updated.', 'success');\n//     } else {\n//       setParents([...parents, { ...parentForm, students: [] }]);\n//       Swal.fire('Added!', 'Parent info saved.', 'success');\n//     }\n\n//     setShowParentModal(false);\n//     setParentForm({ name: '', phone: '', email: '' });\n//     setError('');\n//   };\n\n//   const handleStudentSubmit = (e) => {\n//     e.preventDefault();\n//     const { name, age, classLevel } = studentForm;\n\n//     if (!name || !age || !classLevel) {\n//       setError('All student fields are required.');\n//       return;\n//     }\n\n//     const updatedParents = [...parents];\n//     const parent = updatedParents[selectedParentIndex];\n\n//     if (!parent.students) parent.students = [];\n\n//     if (editStudentIndex !== null) {\n//       parent.students[editStudentIndex] = studentForm;\n//     } else {\n//       parent.students.push(studentForm);\n//     }\n\n//     setParents(updatedParents);\n//     setShowStudentModal(false);\n//     setStudentForm({ name: '', age: '', classLevel: '' });\n//     setEditStudentIndex(null);\n//     setError('');\n//     Swal.fire('Success!', 'Student info saved.', 'success');\n//   };\n\n//   return (\n//     <div className=\"dashboard-content\" style={{ minHeight: '100vh', paddingBottom: '60px' }}>\n//       <h2>Add Parents & Students</h2>\n\n//       <button className=\"add-btn\" onClick={() => openParentModal()}>\n//         + Add Parent\n//       </button>\n\n//       {/* Parent List */}\n//       {parents.length === 0 ? (\n//         <p>No parent records yet.</p>\n//       ) : (\n//         parents.map((parent, index) => (\n//           <div key={index} style={{ border: '1px solid #ccc', marginTop: '20px', padding: '15px' }}>\n//             <h3>{parent.name}</h3>\n//             <p><strong>Phone:</strong> {parent.phone}</p>\n//             <p><strong>Email:</strong> {parent.email}</p>\n//             <button onClick={() => openParentModal(index)}>Edit Parent</button>\n//             <button onClick={() => openStudentModal(index)} style={{ marginLeft: '10px' }}>\n//               + Add Student\n//             </button>\n\n//             {/* Student List */}\n//             {parent.students && parent.students.length > 0 && (\n//               <table className=\"student-table\" style={{ marginTop: '15px' }}>\n//                 <thead>\n//                   <tr>\n//                     <th>Name</th>\n//                     <th>Age</th>\n//                     <th>Class Level</th>\n//                     <th>Action</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {parent.students.map((student, sIndex) => (\n//                     <tr key={sIndex}>\n//                       <td>{student.name}</td>\n//                       <td>{student.age}</td>\n//                       <td>{student.classLevel}</td>\n//                       <td>\n//                         <button onClick={() => openStudentModal(index, sIndex)}>Edit</button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             )}\n//           </div>\n//         ))\n//       )}\n\n//       {/* Parent Modal */}\n//       {showParentModal && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content\">\n//             <h4>{selectedParentIndex !== null ? 'Update Parent' : 'Add Parent'}</h4>\n//             <form onSubmit={handleParentSubmit}>\n//               <label>Parent Name:</label>\n//               <input type=\"text\" name=\"name\" value={parentForm.name} onChange={handleParentChange} />\n//               <label>Phone:</label>\n//               <input type=\"text\" name=\"phone\" value={parentForm.phone} onChange={handleParentChange} />\n//               <label>Email:</label>\n//               <input type=\"email\" name=\"email\" value={parentForm.email} onChange={handleParentChange} />\n//               {error && <p className=\"error\">{error}</p>}\n//               <button type=\"submit\">{selectedParentIndex !== null ? 'Update' : 'Save'}</button>\n//               <button type=\"button\" onClick={() => setShowParentModal(false)}>Cancel</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Student Modal */}\n//       {showStudentModal && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content\">\n//             <h4>{editStudentIndex !== null ? 'Update Student' : 'Add Student'}</h4>\n//             <form onSubmit={handleStudentSubmit}>\n//               <label>Student Name:</label>\n//               <input type=\"text\" name=\"name\" value={studentForm.name} onChange={handleStudentChange} />\n//               <label>Age:</label>\n//               <input type=\"number\" name=\"age\" value={studentForm.age} onChange={handleStudentChange} />\n//               <label>Class Level:</label>\n//               <input type=\"text\" name=\"classLevel\" value={studentForm.classLevel} onChange={handleStudentChange} />\n//               {error && <p className=\"error\">{error}</p>}\n//               <button type=\"submit\">{editStudentIndex !== null ? 'Update' : 'Add'}</button>\n//               <button type=\"button\" onClick={() => setShowStudentModal(false)}>Cancel</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default Parent;","map":{"version":3,"names":[],"sources":["D:/notes/School_Tours_System/frontend/SchoolTour/SchoolTour/schooltour/src/pages/Parent.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Swal from 'sweetalert2';\r\n// import Footer from '../components/Footer';\r\n// import '../css/Login.css';\r\n\r\n// function Parent() {\r\n//   const [parents, setParents] = useState([]);\r\n//   const [selectedParentIndex, setSelectedParentIndex] = useState(null);\r\n//   const [showParentModal, setShowParentModal] = useState(false);\r\n//   const [showStudentModal, setShowStudentModal] = useState(false);\r\n//   const [parentForm, setParentForm] = useState({ name: '', phone: '', email: '' });\r\n//   const [studentForm, setStudentForm] = useState({ name: '', age: '', classLevel: '' });\r\n//   const [error, setError] = useState('');\r\n//   const [editStudentIndex, setEditStudentIndex] = useState(null);\r\n\r\n//   const openParentModal = (index = null) => {\r\n//     if (index !== null) {\r\n//       setParentForm(parents[index]);\r\n//       setSelectedParentIndex(index);\r\n//     } else {\r\n//       setParentForm({ name: '', phone: '', email: '', students: [] });\r\n//       setSelectedParentIndex(null);\r\n//     }\r\n//     setError('');\r\n//     setShowParentModal(true);\r\n//   };\r\n\r\n//   const openStudentModal = (parentIndex, studentIndex = null) => {\r\n//     setSelectedParentIndex(parentIndex);\r\n//     if (studentIndex !== null) {\r\n//       setStudentForm(parents[parentIndex].students[studentIndex]);\r\n//       setEditStudentIndex(studentIndex);\r\n//     } else {\r\n//       setStudentForm({ name: '', age: '', classLevel: '' });\r\n//       setEditStudentIndex(null);\r\n//     }\r\n//     setShowStudentModal(true);\r\n//   };\r\n\r\n//   const handleParentChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setParentForm((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleStudentChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setStudentForm((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleParentSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const { name, phone, email } = parentForm;\r\n//     if (!name || !phone || !email) {\r\n//       setError('All fields are required.');\r\n//       return;\r\n//     }\r\n//     if (!/^\\d{10,15}$/.test(phone)) {\r\n//       setError('Phone must be 10â€“15 digits.');\r\n//       return;\r\n//     }\r\n//     if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n//       setError('Invalid email format.');\r\n//       return;\r\n//     }\r\n\r\n//     if (selectedParentIndex !== null) {\r\n//       const updated = [...parents];\r\n//       updated[selectedParentIndex] = { ...parentForm };\r\n//       setParents(updated);\r\n//       Swal.fire('Updated!', 'Parent info updated.', 'success');\r\n//     } else {\r\n//       setParents([...parents, { ...parentForm, students: [] }]);\r\n//       Swal.fire('Added!', 'Parent info saved.', 'success');\r\n//     }\r\n\r\n//     setShowParentModal(false);\r\n//     setParentForm({ name: '', phone: '', email: '' });\r\n//     setError('');\r\n//   };\r\n\r\n//   const handleStudentSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const { name, age, classLevel } = studentForm;\r\n\r\n//     if (!name || !age || !classLevel) {\r\n//       setError('All student fields are required.');\r\n//       return;\r\n//     }\r\n\r\n//     const updatedParents = [...parents];\r\n//     const parent = updatedParents[selectedParentIndex];\r\n\r\n//     if (!parent.students) parent.students = [];\r\n\r\n//     if (editStudentIndex !== null) {\r\n//       parent.students[editStudentIndex] = studentForm;\r\n//     } else {\r\n//       parent.students.push(studentForm);\r\n//     }\r\n\r\n//     setParents(updatedParents);\r\n//     setShowStudentModal(false);\r\n//     setStudentForm({ name: '', age: '', classLevel: '' });\r\n//     setEditStudentIndex(null);\r\n//     setError('');\r\n//     Swal.fire('Success!', 'Student info saved.', 'success');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-content\" style={{ minHeight: '100vh', paddingBottom: '60px' }}>\r\n//       <h2>Add Parents & Students</h2>\r\n\r\n//       <button className=\"add-btn\" onClick={() => openParentModal()}>\r\n//         + Add Parent\r\n//       </button>\r\n\r\n//       {/* Parent List */}\r\n//       {parents.length === 0 ? (\r\n//         <p>No parent records yet.</p>\r\n//       ) : (\r\n//         parents.map((parent, index) => (\r\n//           <div key={index} style={{ border: '1px solid #ccc', marginTop: '20px', padding: '15px' }}>\r\n//             <h3>{parent.name}</h3>\r\n//             <p><strong>Phone:</strong> {parent.phone}</p>\r\n//             <p><strong>Email:</strong> {parent.email}</p>\r\n//             <button onClick={() => openParentModal(index)}>Edit Parent</button>\r\n//             <button onClick={() => openStudentModal(index)} style={{ marginLeft: '10px' }}>\r\n//               + Add Student\r\n//             </button>\r\n\r\n//             {/* Student List */}\r\n//             {parent.students && parent.students.length > 0 && (\r\n//               <table className=\"student-table\" style={{ marginTop: '15px' }}>\r\n//                 <thead>\r\n//                   <tr>\r\n//                     <th>Name</th>\r\n//                     <th>Age</th>\r\n//                     <th>Class Level</th>\r\n//                     <th>Action</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {parent.students.map((student, sIndex) => (\r\n//                     <tr key={sIndex}>\r\n//                       <td>{student.name}</td>\r\n//                       <td>{student.age}</td>\r\n//                       <td>{student.classLevel}</td>\r\n//                       <td>\r\n//                         <button onClick={() => openStudentModal(index, sIndex)}>Edit</button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             )}\r\n//           </div>\r\n//         ))\r\n//       )}\r\n\r\n//       {/* Parent Modal */}\r\n//       {showParentModal && (\r\n//         <div className=\"modal\">\r\n//           <div className=\"modal-content\">\r\n//             <h4>{selectedParentIndex !== null ? 'Update Parent' : 'Add Parent'}</h4>\r\n//             <form onSubmit={handleParentSubmit}>\r\n//               <label>Parent Name:</label>\r\n//               <input type=\"text\" name=\"name\" value={parentForm.name} onChange={handleParentChange} />\r\n//               <label>Phone:</label>\r\n//               <input type=\"text\" name=\"phone\" value={parentForm.phone} onChange={handleParentChange} />\r\n//               <label>Email:</label>\r\n//               <input type=\"email\" name=\"email\" value={parentForm.email} onChange={handleParentChange} />\r\n//               {error && <p className=\"error\">{error}</p>}\r\n//               <button type=\"submit\">{selectedParentIndex !== null ? 'Update' : 'Save'}</button>\r\n//               <button type=\"button\" onClick={() => setShowParentModal(false)}>Cancel</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Student Modal */}\r\n//       {showStudentModal && (\r\n//         <div className=\"modal\">\r\n//           <div className=\"modal-content\">\r\n//             <h4>{editStudentIndex !== null ? 'Update Student' : 'Add Student'}</h4>\r\n//             <form onSubmit={handleStudentSubmit}>\r\n//               <label>Student Name:</label>\r\n//               <input type=\"text\" name=\"name\" value={studentForm.name} onChange={handleStudentChange} />\r\n//               <label>Age:</label>\r\n//               <input type=\"number\" name=\"age\" value={studentForm.age} onChange={handleStudentChange} />\r\n//               <label>Class Level:</label>\r\n//               <input type=\"text\" name=\"classLevel\" value={studentForm.classLevel} onChange={handleStudentChange} />\r\n//               {error && <p className=\"error\">{error}</p>}\r\n//               <button type=\"submit\">{editStudentIndex !== null ? 'Update' : 'Add'}</button>\r\n//               <button type=\"button\" onClick={() => setShowStudentModal(false)}>Cancel</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Parent;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}